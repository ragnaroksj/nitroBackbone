/*
 * grunt
 * http://gruntjs.com/
 *
 * Copyright (c) 2014 "Cowboy" Ben Alman
 * Licensed under the MIT license.
 * https://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
 */"use strict";function gRequire(e){return grunt[e]=require("./grunt/"+e)}function gExpose(e,t,n){grunt[n||t]=e[t].bind(e)}var path=require("path");require("coffee-script");var grunt=module.exports={},util=require("grunt-legacy-util");grunt.util=util;grunt.util.task=require("./util/task");var Log=require("grunt-legacy-log").Log,log=new Log({grunt:grunt});grunt.log=log;gRequire("template");gRequire("event");var fail=gRequire("fail");gRequire("file");var option=gRequire("option"),config=gRequire("config"),task=gRequire("task"),help=gRequire("help");gRequire("cli");var verbose=grunt.verbose=log.verbose;grunt.package=require("../package.json");grunt.version=grunt.package.version;gExpose(task,"registerTask");gExpose(task,"registerMultiTask");gExpose(task,"registerInitTask");gExpose(task,"renameTask");gExpose(task,"loadTasks");gExpose(task,"loadNpmTasks");gExpose(config,"init","initConfig");gExpose(fail,"warn");gExpose(fail,"fatal");grunt.tasks=function(e,t,n){option.init(t);var r,i;if(option("version")){log.writeln("grunt v"+grunt.version);if(option("verbose")){verbose.writeln("Install path: "+path.resolve(__dirname,".."));grunt.log.muted=!0;grunt.task.init([],{help:!0});grunt.log.muted=!1;r=Object.keys(grunt.task._tasks).sort();verbose.writeln("Available tasks: "+r.join(" "));i=[];Object.keys(grunt.cli.optlist).forEach(function(e){var t=grunt.cli.optlist[e];i.push("--"+(t.negate?"no-":"")+e);t.short&&i.push("-"+t.short)});verbose.writeln("Available options: "+i.join(" "))}return}log.initColors();if(option("help")){help.display();return}verbose.header("Initializing").writeflags(option.flags(),"Command-line options");var s=e&&e.length>0;e=task.parseArgs([s?e:"default"]);task.init(e);verbose.writeln();s||verbose.writeln("No tasks specified, running default tasks.");verbose.writeflags(e,"Running tasks");var o=function(e){fail.fatal(e,fail.code.TASK_FAILURE)};process.on("uncaughtException",o);task.options({error:function(e){fail.warn(e,fail.code.TASK_FAILURE)},done:function(){process.removeListener("uncaughtException",o);fail.report();n?n():util.exit(0)}});e.forEach(function(e){task.run(e)});task.start({asyncDone:!0})};