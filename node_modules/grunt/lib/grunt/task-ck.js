/*
 * grunt
 * http://gruntjs.com/
 *
 * Copyright (c) 2014 "Cowboy" Ben Alman
 * Licensed under the MIT license.
 * https://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
 */"use strict";function isValidMultiTaskTarget(e){return!/^_|^options$/.test(e)}function loadTask(e){loadTaskStack.push(registry);registry={tasks:[],untasks:[],meta:{info:lastInfo,filepath:e}};var t=path.basename(e),n='Loading "'+t+'" tasks...',r=0,i;try{i=require(path.resolve(e));typeof i=="function"&&i.call(grunt,grunt);grunt.verbose.write(n).ok();["un",""].forEach(function(e){var t=grunt.util._.chain(registry[e+"tasks"]).uniq().sort().value();if(t.length>0){r++;grunt.verbose.writeln((e?"- ":"+ ")+grunt.log.wordlist(t))}});r===0&&grunt.verbose.warn("No tasks were registered or unregistered.")}catch(s){grunt.log.write(n).error().verbose.error(s.stack).or.error(s)}registry=loadTaskStack.pop()||{}}function loadTasksMessage(e){loadTaskDepth===0&&(lastInfo=e);grunt.verbose.subhead("Registering "+e+" tasks.")}function loadTasks(e){try{var t=grunt.file.glob.sync("*.{js,coffee}",{cwd:e,maxDepth:1});t.forEach(function(t){loadTask(path.join(e,t))})}catch(n){grunt.log.verbose.error(n.stack).or.error(n)}}var grunt=require("../grunt"),path=require("path"),parent=grunt.util.task.create(),task=module.exports=Object.create(parent),registry={tasks:[],untasks:[],meta:{}},lastInfo,loadTaskDepth=0,errorcount;task.registerTask=function(e){registry.tasks.push(e);parent.registerTask.apply(task,arguments);var t=task._tasks[e];t.meta=grunt.util._.clone(registry.meta);var n=t.fn;t.fn=function(e){var r=t.name;errorcount=grunt.fail.errorcount;Object.defineProperty(this,"errorCount",{enumerable:!0,get:function(){return grunt.fail.errorcount-errorcount}});this.requires=task.requires.bind(task);this.requiresConfig=grunt.config.requires;this.options=function(){var e=[{}].concat(grunt.util.toArray(arguments)).concat([grunt.config([r,"options"])]),t=grunt.util._.extend.apply(null,e);grunt.verbose.writeflags(t,"Options");return t};var i=n.alias||t.multi&&(!e||e==="*")?"verbose":"log";grunt[i].header('Running "'+this.nameArgs+'"'+(this.name!==this.nameArgs?" ("+this.name+")":"")+" task");grunt[i].debug("Task source: "+t.meta.filepath);return n.apply(this,arguments)};return task};task.normalizeMultiTaskFiles=function(e,t){var n,r,i=[];if(grunt.util.kindOf(e)==="object")if("src"in e||"dest"in e){r={};for(n in e)n!=="options"&&(r[n]=e[n]);i.push(r)}else if(grunt.util.kindOf(e.files)==="object")for(n in e.files)i.push({src:e.files[n],dest:grunt.config.process(n)});else Array.isArray(e.files)&&grunt.util._.flatten(e.files).forEach(function(e){var t;if("src"in e||"dest"in e)i.push(e);else for(t in e)i.push({src:e[t],dest:grunt.config.process(t)})});else i.push({src:e,dest:grunt.config.process(t)});if(i.length===0){grunt.verbose.writeln("File: "+"[no files]".yellow);return[]}i=grunt.util._(i).chain().forEach(function(e){if(!("src"in e)||!e.src)return;Array.isArray(e.src)?e.src=grunt.util._.flatten(e.src):e.src=[e.src]}).map(function(e){var t=grunt.util._.extend({},e);delete t.src;delete t.dest;if(e.expand)return grunt.file.expandMapping(e.src,e.dest,t).map(function(t){var n=grunt.util._.extend({},e);n.orig=grunt.util._.extend({},e);n.src=grunt.config.process(t.src);n.dest=grunt.config.process(t.dest);["expand","cwd","flatten","rename","ext"].forEach(function(e){delete n[e]});return n});var n=grunt.util._.extend({},e);n.orig=grunt.util._.extend({},e);"src"in n&&Object.defineProperty(n,"src",{enumerable:!0,get:function r(){var n;if(!("result"in r)){n=e.src;n=Array.isArray(n)?grunt.util._.flatten(n):[n];r.result=grunt.file.expand(t,n)}return r.result}});"dest"in n&&(n.dest=e.dest);return n}).flatten().value();grunt.option("verbose")&&i.forEach(function(e){var t=[];"src"in e&&t.push(e.src.length>0?grunt.log.wordlist(e.src):"[no src]".yellow);"dest"in e&&t.push("-> "+(e.dest?String(e.dest).cyan:"[no dest]".yellow));t.length>0&&grunt.verbose.writeln("Files: "+t.join(" "))});return i};task.registerMultiTask=function(e,t,n){if(n==null){n=t;t="Custom multi task."}var r;task.registerTask(e,t,function(e){var t=r.name;this.args=grunt.util.toArray(arguments).slice(1);if(!e||e==="*")return task.runAllTargets(t,this.args);if(!isValidMultiTaskTarget(e))throw new Error('Invalid target "'+e+'" specified.');this.requiresConfig([t,e]);this.options=function(){var n=grunt.config([t,e]),r=[{}].concat(grunt.util.toArray(arguments)).concat([grunt.config([t,"options"]),grunt.util.kindOf(n)==="object"?n.options:{}]),i=grunt.util._.extend.apply(null,r);grunt.verbose.writeflags(i,"Options");return i};this.target=e;this.flags={};this.args.forEach(function(e){this.flags[e]=!0},this);this.data=grunt.config([t,e]);this.files=task.normalizeMultiTaskFiles(this.data,e);Object.defineProperty(this,"filesSrc",{enumerable:!0,get:function(){return grunt.util._(this.files).chain().pluck("src").flatten().uniq().value()}.bind(this)});return n.apply(this,this.args)});r=task._tasks[e];r.multi=!0};task.registerInitTask=function(e,t,n){task.registerTask(e,t,n);task._tasks[e].init=!0};task.renameTask=function(e,t){var n;try{n=parent.renameTask.apply(task,arguments);registry.untasks.push(e);registry.tasks.push(t);return n}catch(r){grunt.log.error(r.message)}};task.runAllTargets=function(e,t){var n=Object.keys(grunt.config.getRaw(e)||{});if(n.length===0){grunt.log.error('No "'+e+'" targets found.');return!1}n.filter(isValidMultiTaskTarget).forEach(function(n){task.run([e,n].concat(t||[]).join(":"))})};var loadTaskStack=[];task.loadTasks=function(e){loadTasksMessage('"'+e+'"');grunt.file.exists(e)?loadTasks(e):grunt.log.error('Tasks directory "'+e+'" not found.')};task.loadNpmTasks=function(e){loadTasksMessage('"'+e+'" local Npm module');var t=path.resolve("node_modules"),n=path.join(t,e,"package.json"),r=grunt.file.exists(n)?grunt.file.readJSON(n):{keywords:[]};if(r.keywords&&r.keywords.indexOf("gruntcollection")!==-1){loadTaskDepth++;Object.keys(r.dependencies).forEach(function(n){var r=grunt.file.findup("node_modules/"+n,{cwd:path.resolve("node_modules",e),nocase:!0});r&&task.loadNpmTasks(path.relative(t,r))});loadTaskDepth--;return}var i=path.join(t,e,"tasks");grunt.file.exists(i)?loadTasks(i):grunt.log.error('Local Npm module "'+e+'" not found. Is it installed?')};task.init=function(e,t){t||(t={});var n=e.length>0&&e.every(function(e){var t=task._taskPlusArgs(e).task;return t&&t.init}),r=n?null:grunt.option("gruntfile")||grunt.file.findup("Gruntfile.{js,coffee}",{nocase:!0}),i='Reading "'+(r?path.basename(r):"???")+'" Gruntfile...';if(r&&grunt.file.exists(r)){grunt.verbose.writeln().write(i).ok();process.chdir(grunt.option("base")||path.dirname(r));loadTasksMessage("Gruntfile");loadTask(r)}else if(!t.help&&!n)if(grunt.option("gruntfile")){grunt.log.writeln().write(i).error();grunt.fatal('Unable to find "'+r+'" Gruntfile.',grunt.fail.code.MISSING_GRUNTFILE)}else if(!grunt.option("help")){grunt.verbose.writeln().write(i).error();grunt.log.writelns("A valid Gruntfile could not be found. Please see the getting started guide for more information on how to configure grunt: http://gruntjs.com/getting-started");grunt.fatal("Unable to find Gruntfile.",grunt.fail.code.MISSING_GRUNTFILE)}(grunt.option("npm")||[]).forEach(task.loadNpmTasks);(grunt.option("tasks")||[]).forEach(task.loadTasks)};