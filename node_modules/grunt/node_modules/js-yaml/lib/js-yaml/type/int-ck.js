"use strict";function resolveYamlInteger(e){var t,n,r,i;if(!YAML_INTEGER_PATTERN.test(e))return NIL;t=e.replace(/_/g,"");n="-"===t[0]?-1:1;i=[];0<="+-".indexOf(t[0])&&(t=t.slice(1));if("0"===t)return 0;if(/^0b/.test(t))return n*parseInt(t.slice(2),2);if(/^0x/.test(t))return n*parseInt(t,16);if("0"===t[0])return n*parseInt(t,8);if(0<=t.indexOf(":")){t.split(":").forEach(function(e){i.unshift(parseInt(e,10))});t=0;r=1;i.forEach(function(e){t+=e*r;r*=60});return n*t}return n*parseInt(t,10)}var NIL=require("../common").NIL,Type=require("../type"),YAML_INTEGER_PATTERN=new RegExp("^(?:[-+]?0b[0-1_]+|[-+]?0[0-7_]+|[-+]?(?:0|[1-9][0-9_]*)|[-+]?0x[0-9a-fA-F_]+|[-+]?[1-9][0-9_]*(?::[0-5]?[0-9])+)$");module.exports=new Type("tag:yaml.org,2002:int",{loader:{kind:"string",resolver:resolveYamlInteger},dumper:{kind:"integer",defaultStyle:"decimal",representer:{binary:function(e){return"0b"+e.toString(2)},octal:function(e){return"0"+e.toString(8)},decimal:function(e){return e.toString(10)},hexadecimal:function(e){return"0x"+e.toString(16).toUpperCase()}},styleAliases:{binary:[2,"bin"],octal:[8,"oct"],decimal:[10,"dec"],hexadecimal:[16,"hex"]}}});