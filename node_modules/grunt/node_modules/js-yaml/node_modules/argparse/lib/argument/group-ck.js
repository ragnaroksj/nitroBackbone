/** internal
 * class ArgumentGroup
 *
 * Group arguments.
 * By default, ArgumentParser groups command-line arguments
 * into “positional arguments” and “optional arguments”
 * when displaying help messages. When there is a better
 * conceptual grouping of arguments than this default one,
 * appropriate groups can be created using the addArgumentGroup() method
 *
 * This class inherited from [[ArgumentContainer]]
 **/"use strict";var util=require("util"),ActionContainer=require("../action_container"),ArgumentGroup=module.exports=function(t,n){n=n||{};n.conflictHandler=n.conflictHandler||t.conflictHandler;n.prefixChars=n.prefixChars||t.prefixChars;n.argumentDefault=n.argumentDefault||t.argumentDefault;ActionContainer.call(this,n);this.title=n.title;this._groupActions=[];this._container=t;this._registries=t._registries;this._actions=t._actions;this._optionStringActions=t._optionStringActions;this._defaults=t._defaults;this._hasNegativeNumberOptionals=t._hasNegativeNumberOptionals;this._mutuallyExclusiveGroups=t._mutuallyExclusiveGroups};util.inherits(ArgumentGroup,ActionContainer);ArgumentGroup.prototype._addAction=function(e){e=ActionContainer.prototype._addAction.call(this,e);this._groupActions.push(e);return e};ArgumentGroup.prototype._removeAction=function(e){ActionContainer.prototype._removeAction.call(this,e);var t=this._groupActions.indexOf(e);t>=0&&this._groupActions.splice(t,1)};