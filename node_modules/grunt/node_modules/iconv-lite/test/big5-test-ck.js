var vows=require("vows"),fs=require("fs"),assert=require("assert"),iconv=require(__dirname+"/../"),testString="中文abc",testStringBig5Buffer=new Buffer([164,164,164,229,97,98,99]),testString2="測試",testStringBig5Buffer2=new Buffer([180,250,184,213]);vows.describe("Big5 tests").addBatch({"Big5 correctly encoded/decoded":function(){assert.strictEqual(iconv.toEncoding(testString,"big5").toString("binary"),testStringBig5Buffer.toString("binary"));assert.strictEqual(iconv.fromEncoding(testStringBig5Buffer,"big5"),testString);assert.strictEqual(iconv.toEncoding(testString2,"big5").toString("binary"),testStringBig5Buffer2.toString("binary"));assert.strictEqual(iconv.fromEncoding(testStringBig5Buffer2,"big5"),testString2)},"cp950 correctly encoded/decoded":function(){assert.strictEqual(iconv.toEncoding(testString,"cp950").toString("binary"),testStringBig5Buffer.toString("binary"));assert.strictEqual(iconv.fromEncoding(testStringBig5Buffer,"cp950"),testString)},"Big5 file read decoded,compare with iconv result":function(){var e=fs.readFileSync(__dirname+"/big5File.txt"),t=iconv.fromEncoding(e,"big5"),n=new(require("iconv").Iconv)("big5","utf8");assert.strictEqual(n.convert(e).toString(),t)},"Big5 correctly decodes and encodes characters · and ×":function(){var e="·×",t=new Buffer([161,80,161,209]);assert.strictEqual(iconv.toEncoding(e,"big5").toString("binary"),t.toString("binary"));assert.strictEqual(iconv.fromEncoding(t,"big5"),e)}}).export(module);