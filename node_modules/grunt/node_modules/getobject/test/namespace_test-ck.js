"use strict";var getobject=require("../lib/getobject");exports.get={"no create":function(e){var t={a:{b:{c:1,d:"",e:null,f:undefined,"g.h.i":2}}};e.strictEqual(getobject.get(t,"a"),t.a,"should get immediate properties.");e.strictEqual(getobject.get(t,"a.b"),t.a.b,"should get nested properties.");e.strictEqual(getobject.get(t,"a.x"),undefined,"should return undefined for nonexistent properties.");e.strictEqual(getobject.get(t,"a.b.c"),1,"should return values.");e.strictEqual(getobject.get(t,"a.b.d"),"","should return values.");e.strictEqual(getobject.get(t,"a.b.e"),null,"should return values.");e.strictEqual(getobject.get(t,"a.b.f"),undefined,"should return values.");e.strictEqual(getobject.get(t,"a.b.g\\.h\\.i"),2,"literal backslash should escape period in property name.");e.done()},create:function(e){var t={a:1};e.strictEqual(getobject.get(t,"a",!0),t.a,"should just return existing properties.");e.strictEqual(getobject.get(t,"b",!0),t.b,"should create immediate properties.");e.strictEqual(getobject.get(t,"c.d.e",!0),t.c.d.e,"should create nested properties.");e.done()}};exports.set=function(e){var t={};e.strictEqual(getobject.set(t,"a",1),1,"should return immediate property value.");e.strictEqual(t.a,1,"should set property value.");e.strictEqual(getobject.set(t,"b.c.d",1),1,"should return nested property value.");e.strictEqual(t.b.c.d,1,"should set property value.");e.strictEqual(getobject.set(t,"e\\.f\\.g",1),1,"literal backslash should escape period in property name.");e.strictEqual(t["e.f.g"],1,"should set property value.");e.done()};exports.exists=function(e){var t={a:{b:{c:1,d:"",e:null,f:undefined,"g.h.i":2}}};e.ok(getobject.exists(t,"a"),"immediate property should exist.");e.ok(getobject.exists(t,"a.b"),"nested property should exist.");e.ok(getobject.exists(t,"a.b.c"),"nested property should exist.");e.ok(getobject.exists(t,"a.b.d"),"nested property should exist.");e.ok(getobject.exists(t,"a.b.e"),"nested property should exist.");e.ok(getobject.exists(t,"a.b.f"),"nested property should exist.");e.ok(getobject.exists(t,"a.b.g\\.h\\.i"),"literal backslash should escape period in property name.");e.equal(getobject.exists(t,"x"),!1,"nonexistent property should not exist.");e.equal(getobject.exists(t,"a.x"),!1,"nonexistent property should not exist.");e.equal(getobject.exists(t,"a.b.x"),!1,"nonexistent property should not exist.");e.done()};